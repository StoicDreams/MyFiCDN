/*!
 * MDParse - https://webui.stoicdreams.com
 * Web UI Specific Markdown Parser
 * Authored by Erik Gassler - Stoic Dreams
 * Copyright Â© 2025 Stoic Dreams - https://www.stoicdreams.com
 * Licensed under the MIT license - https://github.com/StoicDreams/MyFiCDN/blob/main/LICENSE
 */
"use strict";export class MarkdownParser{emojiMap={};cache={};renderers={blank:(html,token,commands)=>`${html}\n`,html_block:(html,token,commands)=>{const body=token.content.replace(new RegExp(`^<${token.tag}[^>]*>`),"").replace(new RegExp(`</${token.tag}>$`),"");return`${html}<${token.tag}${token.attrs}>${commands.parse(body)}</${token.tag}>\n`},literal:(html,token,commands)=>`${html}${token.content}\n`,paragraph:(html,token,commands)=>`${html}<p>${commands.renderInline(token.content)}</p>\n`,no_paragraph:(html,token,commands)=>`${html}${commands.renderInline(token.content)}\n`};rules=[];constructor(){this.initDefaultRules()}addRule(type,test,processor,render){this.rules.push({test:test,processor:processor}),this.renderers[type]=render}insertRule(index,test,processor,render){this.rules.splice(index,0,{test:test,processor:processor}),this.renderers[type]=render}initDefaultRules(){const t=this,makeListRenderer=listTag=>(html,token,commands)=>{const last=commands.stack[commands.stack.length-1];(!last||token.indent<last.indent||last.tag!==listTag)&&(html=commands.closeListsAbove(html,token.indent));const top=commands.stack[commands.stack.length-1];return(!top||top.tag!==listTag||top.indent<token.indent)&&(html+=`<${listTag}>`,commands.stack.push({tag:listTag,indent:token.indent})),token.check?html+`<li class="${commands.escapeQuote(token.check)}">${commands.renderInline(token.content)}</li>\n`:html+`<li>${commands.renderInline(token.content)}</li>\n`};t.addRule("line-break",((line,state)=>/^[\s]*---.*/.test(line)&&0===state.tableBuffer.length),((line,state)=>{const res=line.match(/^[\s]*[-]+([^-]+).*/);if(res){const[,theme]=res;return{type:"line-break",theme:theme}}return{type:"line-break"}}),((html,token,commands)=>token.theme?`${html}<webui-line theme="${t.escapeQuote(token.theme)}"></webui-line>\n`:`${html}<webui-line></webui-line>\n`)),t.addRule("heading",/^[\s]*#{1,6} /,((line,state)=>{const level=(line=line.trim()).match(/^#+/)[0].length;return{type:"heading",level:level,content:line.slice(level+1).trim()}}),((html,token,commands)=>`${html}<h${token.level}>${commands.renderInline(token.content)}</h${token.level}>\n`)),t.addRule("ul_item",/^[\s]*[\-\*]{1} /,((line,state)=>{const indent=line.match(/^\s*/)[0].length;let[,check]=line.match(/^\s*[\-\*]{1} ?(\[( |x)?\])?/);return void 0!==check&&(check="[x]"===check?"checked":"unchecked"),{type:"ul_item",content:line.replace(/^\s*[\-\*]{1}( \[( |x)?\])?/,"").trim(),indent:indent,check:check}}),makeListRenderer("ul")),t.addRule("ol_item",/^[\s]*\d+\. /,((line,state)=>{const indent=line.match(/^\s*/)[0].length;return{type:"ol_item",content:line.replace(/^\s*\d+\.\s+/,"").trim(),indent:indent}}),makeListRenderer("ol")),t.addRule("blockquote_group",/^[\s]*> ?/,((line,state)=>{if(line=line.trim(),state.inCodeBlock||state.inTemplate)return{type:"literal",content:line};let[,,,theme,cite,content]=line.match(/^[\s]*(>| )*(\[([a-z]+)?\:?([A-Za-z-_ ]+)?\])?(.*)/);return theme=theme?.replace(/(\[|\])/g,"")||"info",state.inBlockquote=!0,{type:"blockquote",content:line.replace(/^> ?(\[([a-z]+)?:?([A-Za-z-_ ]+)?\])? ?/,""),theme:theme,cite:cite}}),((html,token,commands)=>{let theme=token.theme||"info",cite=token.cite||"";return`${html}<webui-quote theme="${t.escapeQuote(theme)}" cite="${t.escapeQuote(cite)}">`+t.parse(token.content.join("\n"))+"</webui-quote>\n"})),t.addRule("precode_start",/^[\s]*<pre><code>.*/,((line,state)=>(state.inCodeBlock||state.inTemplate||(state.inCodeBlock=!0,state.codeBlockTag="<pre><code>"),{type:"literal",content:line})),((html,token,commands)=>html)),t.addRule("precode_end",/^.*<\/code><\/pre>.*/,((line,state)=>("<pre><code>"===state.codeBlockTag&&(state.inCodeBlock=!1),{type:"literal",content:line})),((html,token,commands)=>html)),t.addRule("webui_code_start",/^[\s]*<webui-code*/,((line,state)=>state.inCodeBlock?{type:"literal",content:line}:(state.inCodeBlock=!0,state.codeBlockTag="<webui-code>",{type:"webui_code_start",line:line})),((html,token,commands)=>`${html}${token.line}\n`)),t.addRule("webui_code_end",/^[\s]*<\/webui-code>[\s]*/,((line,state)=>"<webui-code>"!==state.codeBlockTag?{type:"literal",content:line}:(state.inCodeBlock=!1,state.codeBlockTag="",{type:"webui_code_end",line:line})),((html,token,commands)=>`${html}${token.line}\n`)),t.addRule("code_block_start",/^[\s]*```/,((line,state)=>{line=line.trim();let[,tag,lang,,label]=line.match(/^([`]+)([^:\|;]*)(:|\||;)?(.*)/);return state.inCodeBlock?state.codeBlockTag===tag?(state.inCodeBlock=!1,state.codeBlockTag="",{type:"code_block_end"}):{type:"literal",content:line}:(state.inCodeBlock=!0,state.codeBlockTag=tag,lang=lang?lang.trim():"text",{type:"code_block_start",lang:lang,label:label})}),((html,token,commands)=>token.label?`${html}<webui-code lang="${t.escapeQuote(token.lang)}" label="${t.escapeQuote(token.label)}">`:`${html}<webui-code lang="${t.escapeQuote(token.lang)}">`)),t.addRule("code_block_end",/^[\s]*```/,((line,state)=>{webui.log.warn("Unexpected use of code_block_end")}),((html,token,commands)=>`${html}</webui-code>\n`)),t.addRule("code_line",((line,state)=>state.inCodeBlock&&!/^[\s]*```/.test(line)),((line,state)=>({type:"code_line",content:line})),((html,token,commands)=>`${html}${commands.escapeCode(token.content)}\n`)),t.addRule("html_selfclose",/^[\s]*<([a-z][a-z0-9-_]*)([^>]*)\/>[\s]*$/,((line,state)=>{const[,tag,attrs]=line.match(/^[\s]*<([a-z][a-z0-9-_]*)([^>]*)\/>[\s]*$/);return{type:"html_selfclose",tag:tag,attrs:attrs}}),((html,token,commands)=>`${html}<${token.tag}${token.attrs} />\n`)),t.addRule("html_withclose",/^[\s]*<([a-z][a-z0-9-_]*)([^>]*)>.*<\/\1>[\s]*$/,((line,state)=>{const[,tag,attrs,contents]=line.match(/^[\s]*<([a-z][a-z0-9-_]*)([^>]*)>(.*)<\/\1>[\s]*$/);return{type:"html_withclose",tag:tag,attrs:attrs,contents:contents}}),((html,token,commands)=>"template"===token.tag?`${html}<${token.tag}${token.attrs}>${token.contents}</${token.tag}>\n`:`${html}<${token.tag}${token.attrs}>${commands.renderInline(token.contents)}</${token.tag}>\n`)),t.addRule("template_open",/^[\s]*<template([^>]*)>.*$/,((line,state)=>{if(state.inCodeBlock)return{type:"literal",content:line};const[,attrs,contents]=line.match(/^[\s]*<template([^>]*)>(.*)$/);return state.templateLayer++,state.inTemplate||(state.inTemplate=!0),{type:"template_open",attrs:attrs,contents:contents}}),((html,token,commands)=>`${html}<template${token.attrs}>${commands.renderInline(token.contents)}\n`)),t.addRule("template_close",/^[^<]*<\/template>.*$/,((line,state)=>{if(state.inCodeBlock)return{type:"literal",content:line};const[,prefix,contents]=line.match(/^([^<]*)<\/template>(.*)$/);return state.templateLayer--,0===state.templateLayer&&(state.inTemplate=!1),{type:"template_close",prefix:prefix,contents:contents}}),((html,token,commands)=>`${html}${token.prefix}</template>${commands.renderInline(token.contents)}\n`)),t.addRule("html_open",/^[\s]*<([a-z][a-z0-9-_]*)([^>]*)>.*$/,((line,state)=>{const[,tag,attrs,contents]=line.match(/^[\s]*<([a-z][a-z0-9-_]*)([^>]*)>(.*)$/);return{type:"html_open",tag:tag,attrs:attrs,contents:contents}}),((html,token,commands)=>`${html}<${token.tag}${token.attrs}>${commands.renderInline(token.contents)}\n`)),t.addRule("html_close",/^[\s]*<\/([a-z][a-z0-9-_]*)>.*$/,((line,state)=>{const[,tag,contents]=line.match(/^[\s]*<\/([a-z][a-z0-9-_]*)>(.*)$/);return{type:"html_close",tag:tag,contents:contents}}),((html,token,commands)=>`${html}</${token.tag}>${commands.renderInline(token.contents)}\n`)),t.addRule("table",((line,state)=>line.includes("|")),((line,state)=>(state.tableBuffer.push(line),!1)),((html,token,commands)=>{const rows=token.rows.map((r=>r.trim().replace(/^\|/,"").replace(/\|$/,"").split("|").map((c=>c.trim())))),head=rows[0],alignments=(rows[1]||[]).map((cell=>{const trimmed=cell.trim();return/^:-+:$/.test(trimmed)?"center":/^-+:$/.test(trimmed)?"right":(/^:-+$/.test(trimmed),"justify")})),body=rows.slice(2);html+='<table class="bordered" theme="info"><thead><tr>'+head.map(((h,i)=>{const align=alignments[i];return`<th${align?` class="text-${t.escapeQuote(align)}"`:""}>${commands.renderInline(h)}</th>`})).join("")+"</tr></thead><tbody>";for(const row of body)html+="<tr>"+row.map(((c,i)=>{const align=alignments[i];return`<td${align?` class="text-${t.escapeQuote(align)}"`:""}>${commands.renderInline(c)}</td>`})).join("")+"</tr>";return`${html}</tbody></table>\n`}))}parse(text,noParagraph){if(null==text||""===text)return"";const t=this;if(t.cache[text])return t.cache[text];const tokens=t.tokenize(t.trimLinePreTabs(text),noParagraph);let html=t.render(tokens);return t.cache[text]=html,html}tokenize(text,noParagraph){const t=this,state={tokens:[],lines:text.split(/\r?\n/),inCodeBlock:!1,inBlockquote:!1,inTemplate:!1,codeBlockTag:"",tableBuffer:[],blockquoteBuffer:[],templateLayer:0,captureLiteral:!1},flushTable=()=>{0!==state.tableBuffer.length&&(state.tokens.push({type:"table",rows:[...state.tableBuffer]}),state.tableBuffer=[])},flushBlockquote=()=>{state.inBlockquote&&(state.inBlockquote=!1,state.blockquoteBuffer.length&&(state.tokens.push({type:"blockquote_group",content:[...state.blockquoteBuffer.map((b=>b.content))],theme:state.blockquoteBuffer[0].theme,cite:state.blockquoteBuffer[0].cite}),state.blockquoteBuffer.length=0))};for(let line of state.lines){let matched=!1;if(""===line.trim()){flushTable(),flushBlockquote(),state.tokens.push({type:"blank"});continue}for(let rule of t.rules)if("function"==typeof rule.test?rule.test(line,state):rule.test.test(line)){matched=!0;const result=rule.processor(line,state);if(state.inTemplate)state.tokens.push({type:"literal",content:line});else if(state.inCodeBlock&&"code_block_end"===result.type)state.tokens.push({type:"literal",content:line});else if(state.inCodeBlock&&"code_block_start"!==result.type&&"webui_code_start"!==result.type)state.tokens.push({type:"code_line",content:line});else if(result){if("table"!==result.type&&flushTable(),"blockquote"===result.type){state.blockquoteBuffer.push(result);continue}flushBlockquote(),state.tokens.push(result)}break}if(matched)continue;if(state.inTemplate||state.inCodeBlock){state.tokens.push({type:"literal",content:line});continue}state.inBlockquote&&(flushBlockquote(),state.inBlockquote=!1),flushTable();const type=noParagraph?"no_paragraph":"paragraph";state.tokens.push({type:type,content:line.trim()})}return flushTable(),flushBlockquote(),state.tokens}render(tokens){const t=this;let html="";const stack=[],commands={stack:stack,closeListsAbove:(html,level)=>{for(;stack.length&&stack[stack.length-1].indent>level;){html+=`</${stack.pop().tag}>\n`}return html},escapeCode:t.escapeCode.bind(t),escapeHtml:t.escapeHtml.bind(t),escapeQuote:t.escapeQuote.bind(t),parse:t.parse.bind(t),renderInline:t.renderInline.bind(t)};for(const token of tokens){-1===["ol_item","ul_item"].indexOf(token.type)&&stack.length>0&&(html=commands.closeListsAbove(html,-1));const render=t.renderers[token.type];"function"==typeof render&&(html=render(html,token,commands))}return html=commands.closeListsAbove(html,-1),html}trimLinePreTabs(html,tabLength=4){let lines=[],tabRepl=webui.repeat(" ",tabLength),startLines=html.replace(/\t/g,tabRepl).split("\n"),tabLen=999,index=0;for(let line of startLines){if(0==index++)continue;let m=line.match(/^([ ]*)/)[0].length;if(0===m)return html;m<tabLen&&(tabLen=m)}if(999===tabLen&&(tabLen=0),0===tabLen)return html;let rgx=new RegExp(`^[ ]{1,${tabLen}}`);for(let line of startLines)lines.push(line.replace(rgx,""));return lines.join("\n")}renderInline(text){const t=this,codeSpans=[];text=text.replace(/`([^`]+)`/g,((_,code)=>{const token=`^^CODE${codeSpans.length}^^`,[,,theme,refined]=code.match(/^(([a-z]+):)?(.*)/);return theme?codeSpans.push(`<code theme="${t.escapeQuote(theme)}">${t.escapeCode(refined)}</code>`):codeSpans.push(`<code>${t.escapeCode(code)}</code>`),token}));const emojis=[];return text=(text=(text=(text=text.replace(/:([a-zA-Z0-9_+-]+):/g,((_,emoji)=>{const token=`^^EMOJI${emojis.length}^^`;return emojis.push(`<webui-emoji emoji="${t.escapeQuote(emoji)}"></webui-emoji>`),token}))).replace(/!\[(.*?)\]\((.*?) "(.*?)"\)/g,'<img alt="$1" src="$2" title="$3" />').replace(/\[(.*?)\]\((.*?) "(.*?)"\)/g,'<a href="$2" title="$3">$1</a>').replace(/!\[(.*?)\]\((.*?)\)/g,'<img alt="$1" src="$2" />').replace(/\[(.*?)\]\((.*?)\)/g,'<a href="$2">$1</a>')).replace(/\\\*/g,"&ast;")).replace(/\*\*(.+?)\*\*/g,"<strong>$1</strong>").replace(/__(.+?)__/g,"<strong>$1</strong>").replace(/\*(?!\s)(.+?)(?!\s)\*/g,"<em>$1</em>").replace(/(?<!\S)_(?!\s)(.+?)(?<!\s)_(?!\.\,\S)/g,"<em>$1</em>"),codeSpans.forEach(((val,i)=>{text=text.replace(`^^CODE${i}^^`,val)})),emojis.forEach(((val,i)=>{text=text.replace(`^^EMOJI${i}^^`,val)})),text}escapeHtml(text){return text.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#039;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}escapeCode(text){return text.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}escapeQuote(text){return text.replace(/&/g,"&amp;").replace(/"/g,"&quot;")}}