"use strict";webui.define("webui-grid",{constructor:t=>{},attr:["columns","min","max","theme","gap","width","height"],attrChanged:(t,property,value)=>{switch(property){case"gap":t.style.gap=webui.pxIfNumber(value);break;case"theme":webui.setTheme(t,value);break;case"columns":num===t.columns||`${num}`===t.columns?t.style.setProperty("--columns",`repeat(${num}, minmax(var(--min), var(--max))`):t.style.setProperty("--columns",t.columns);break;case"min":case"width":t.style.setProperty("--min",webui.pxIfNumber(value));break;case"max":t.style.setProperty("--max",webui.pxIfNumber(value));break;case"height":t.style.setProperty("--height",webui.pxIfNumber(value))}},connected:t=>{},shadowTemplate:'\n<slot></slot>\n<style type="text/css">\n:host {\n--min:10ch;\n--max:1fr;\n--height:auto;\n--columns:repeat(auto-fit, minmax(var(--min), var(--max)));\ndisplay:grid;\ngrid-auto-rows: min-content auto;\ngrid-template-columns: var(--columns);\ngap:var(--padding);\n::slotted(*) {\nmin-width:var(--min);\nmax-width:var(--max);\nmin-height:var(--height);\n}\n}\n</style>\n'});