/*!
 * Web UI Input Message - https://webui.stoicdreams.com/components#webui-input-message
 * A component for displaying and managing multi-line text input fields.
 * Authored by Erik Gassler - Stoic Dreams
 * Copyright Â© 2024-2025 Stoic Dreams - https://www.stoicdreams.com
 * Licensed under the MIT license - https://github.com/StoicDreams/MyFiCDN/blob/main/LICENSE
 */
"use strict";{function handleKeyDown(ev){if("Tab"!==ev.key||!ev.shiftKey)return;if(!ev.target||"TEXTAREA"!==ev.target.nodeName)return;ev.preventDefault();let el=ev.target,text=el.value,postTab=text.slice(el.selectionEnd,text.length),cursorPos=el.selectionEnd,tab=el.getAttribute("tab")||"\t";ev.target.value=text.slice(0,el.selectionStart)+tab+postTab,cursorPos+=tab.length,el.selectionStart=cursorPos,el.selectionEnd=cursorPos}function UpdateAllDisplayedTextareaSizes(){let index=0;for(;index<talist.length;)talist[index].offsetParent?talist[index++].autosize():talist.shift()}const talist=[];window.addEventListener("resize",UpdateAllDisplayedTextareaSizes),webui.define("webui-input-message",{preload:"flex",constructor:t=>{function onInput(ev){t.autosize()}t.autosize=()=>{var target;t._lav!==t.value&&(t._lav=t.value),"TEXTAREA"===(target=t._field).nodeName&&setTimeout((()=>{target.style.height="0px";let newHeight=target.scrollHeight;target.style.height=`${newHeight+30}px`}),1)},talist.push(t),t._label=t.template.querySelector("label"),t._field=t.template.querySelector("textarea"),t._field.setAttribute("name","message"),t._field.addEventListener("keydown",(function(ev){handleKeyDown(ev)})),t._field.addEventListener("keyup",onInput),t._field.addEventListener("change",onInput),t._field.addEventListener("input",onInput)},attr:["title","name","autofocus","value","label","placeholder","tab","height","max-height"],attrChanged:(t,property,value)=>{switch(property){case"height":t.style.height=webui.pxIfNumber(value);break;case"maxHeight":t.style.maxHeight=webui.pxIfNumber(value);break;case"placeholder":t._field.setAttribute("placeholder",value);break;case"label":t._label.innerHTML=value;break;case"name":t._field.setAttribute("name",value);break;case"autofocus":t._field.setAttribute("autofocus",value);break;case"value":t._field.value=value;break;case"tab":t._field.setAttribute("tab",value||"  ")}},props:{value:{get(){return webui.getDefined(this._field.value,"")},set(v){this.setValue(webui.getDefined(v,""))}}},setValue:function(value){const t=this;t._field.value=value,t._field.dispatchEvent(new Event("input",{bubbles:!0,composed:!0})),t._field.dispatchEvent(new Event("change",{bubbles:!0,composed:!0}))},connected:t=>{let id=webui.uuid();t._label.setAttribute("for",id),t._field.setAttribute("id",id)},shadowTemplate:'\n<style type="text/css">\n:host {\ndisplay:block;\nposition:relative;\nmin-height:3em;\nbox-sizing:border-box;\nborder:var(--theme-border-width) solid var(--theme-color);\noverflow:auto;\n}\ntextarea {\ndisplay:block;\nposition:relative;\nwidth:100%;\nmin-height:3em;\nbox-sizing:border-box;\npadding:var(--padding);\nfont:inherit;\nresize: none;\noutline: none;\nborder:none;\nflex-grow:1;\n}\nwebui-flex {\nborder: 1px solid var(--theme);\nbackground-color: var(--theme);\nmin-height:100%;\n}\nlabel {\ndisplay:block;\npadding:var(--padding);\nmargin:0;\nbackground-color:var(--theme-color);\ncolor:var(--theme-color-offset);\n}\nlabel:empty {\ndisplay:none;\n}\n</style>\n<webui-flex column gap="0">\n<label></label>\n<textarea spellcheck="true" autocomplete="off" autocorrect="off"></textarea>\n</webui-flex>\n'})}