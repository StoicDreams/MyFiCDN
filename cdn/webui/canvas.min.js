/*!
 * Web UI Canvas - https://webui.stoicdreams.com/components#webui-canvas
 * A component for displaying a canvas element.
 * Authored by Erik Gassler - Stoic Dreams
 * Copyright Â© 2024-2025 Stoic Dreams - https://www.stoicdreams.com
 * Licensed under the MIT license - https://github.com/StoicDreams/MyFiCDN/blob/main/LICENSE
 */
"use strict";webui.define("webui-canvas",{linkCss:!1,watchVisibility:!1,isInput:!1,preload:"",constructor:t=>{t._canvas=t.template.querySelector("canvas"),t._ctx=t._canvas.getContext("2d"),t._textLines=[],t._lines=[],t._lineHeight=20,t._scrollTop=0,t._visibleLines=0,t._contentHeight=0},flags:["line-numbers"],attr:["height","max-height","alt-color"],attrChanged:(t,property,value)=>{switch(property){case"height":t.style.height=webui.pxIfNumber(value);break;case"maxHeight":t.style.maxHeight=webui.pxIfNumber(value)}t.updateCanvas()},setLines(lines){const t=this;t._lines=lines||[],t._lines.push({}),t._textLines=lines.join("\n"),t.wrapAllLines(),t._contentHeight=t._wrappedLines.length*t._lineHeight,t.updateCanvas(),t.setScroll(0)},setFromText:function(text){if(text===this._textLines)return;let lines=(text=text||"").split(/\r?\n/).map((line=>({line:line})));this.setLines(lines)},setFromHTML:function(html){const div=webui.create("div");div.innerHTML=html;let text=div.textContent||div.innerText||"";if(text===this._textLines)return;let lines=text.split(/\r?\n/).map((line=>({line:line})));this.setLines(lines)},render:function(){const t=this;t.wrapAllLines(),t._contentHeight=t._wrappedLines.length*t._lineHeight,t.updateCanvas()},wrapAllLines(){const t=this;t._ctx.font=getComputedStyle(t).font;const maxWidth=t._canvas.width-50;t._wrappedLines=[];let lineNumber=0;for(let lineObj of t._lines){if(!lineObj||void 0===lineObj.line){t._wrappedLines.push({text:"",...lineObj});continue}lineObj.isFiller||(lineObj.lineNumber=++lineNumber);let originalLine=lineObj.line,currentLine="";if(originalLine.length>0){for(let i=0;i<originalLine.length;i++){const testLine=currentLine+originalLine[i];t._ctx.measureText(testLine).width>maxWidth&&""!==currentLine?(t._wrappedLines.push({text:currentLine,...lineObj}),currentLine=originalLine[i]):currentLine=testLine}currentLine&&t._wrappedLines.push({text:currentLine,...lineObj})}else t._wrappedLines.push({text:currentLine,...lineObj})}},updateCanvas:function(){const t=this;if(!t._wrappedLines)return;const ctx=t._ctx,height=t._canvas.height,width=t._canvas.width;ctx.clearRect(0,0,width,height);const startLine=Math.floor(t._scrollTop/t._lineHeight),endLine=Math.min(startLine+t._visibleLines,t._wrappedLines.length);ctx.font=getComputedStyle(t).font;let digits=t._lines.length.toString().length,padLeft=t.lineNumbers?t._ctx.measureText(webui.repeat("0",digits)).width+10:5;function correctColor(color){return color&&color.startsWith("--")?getComputedStyle(t).getPropertyValue(color):color}let lastLineNumber="",useAlt=!1;for(let i=startLine;i<endLine;i++){const y=(i-startLine)*t._lineHeight+t._lineHeight,entry=t._wrappedLines[i],textColor=entry.isFiller?"#00000000":correctColor(entry.color||"--theme-color-offset");entry.lineNumber&&(useAlt=entry.lineNumber%2==1);const backgroundColor=correctColor(entry.background||!entry.isFiller&&useAlt&&t.altColor||"--theme-color"),showLineNumber=t.lineNumbers&&void 0!==entry.text&&!entry.isFiller;backgroundColor&&(ctx.fillStyle=backgroundColor,ctx.fillRect(0,y-t._lineHeight+4,width,t._lineHeight)),showLineNumber&&entry.lineNumber&&lastLineNumber!==entry.lineNumber&&(lastLineNumber=entry.lineNumber,ctx.fillStyle=textColor,ctx.fillText(entry.lineNumber.toString().padStart(digits,"0"),4,y)),ctx.fillStyle=textColor,ctx.fillText(entry.text||"",padLeft,y)}if(t._contentHeight>t._canvas.height){const viewHeight=t._canvas.height,contentHeight=t._contentHeight,scrollbarHeight=Math.max(viewHeight/contentHeight*viewHeight,20),scrollbarY=t._scrollTop/contentHeight*viewHeight,scrollbarX=t._canvas.width-14;ctx.fillStyle="#c0c0c0",ctx.fillRect(scrollbarX,scrollbarY,14,scrollbarHeight)}},getScroll:function(){return this._scrollTop},setScroll:function(value){const t=this;t._scrollTop=value||0;const maxScroll=Math.max(0,t._contentHeight-t._canvas.height);t._scrollTop<0&&(t._scrollTop=0),t._scrollTop>maxScroll&&(t._scrollTop=maxScroll),t.updateCanvas(),t.dataset.trigger&&t.dispatchEvent(new Event("change",{bubbles:!0,composed:!0}))},copyText(){const allText=this._lines.map((l=>l.line||"")).join("\n");navigator.clipboard.writeText(allText)},onWheel(e){e.preventDefault();let multi=e.shiftKey&&e.ctrlKey?4:e.ctrlKey?3:e.shiftKey?2:.2;this.setScroll(this._scrollTop+e.deltaY*multi)},checkDimensions:function(){const t=this,rect=t.getBoundingClientRect();let height=Math.floor(rect.height),width=Math.floor(rect.width);t._canvas.width===width&&t._canvas.height===height||(t._canvas.width=width,t._canvas.height=height,t._visibleLines=Math.floor(height/t._lineHeight),t.wrapAllLines(),t._contentHeight=t._wrappedLines.length*t._lineHeight,t.updateCanvas(),setTimeout((()=>{t.checkDimensions()}),100))},connected:function(t){const resizeObserver=new ResizeObserver((()=>{t.checkDimensions()}));resizeObserver.observe(t),t._resizeObserver=resizeObserver,t.addEventListener("click",(_=>{t.checkDimensions()})),t._boundOnWheel=e=>t.onWheel(e),t._canvas.addEventListener("wheel",t._boundOnWheel,{passive:!1})},disconnected:function(t){t._resizeObserver&&(t._resizeObserver.disconnect(),t._resizeObserver=null),t._boundOnWheel&&(t._canvas.removeEventListener("wheel",t._boundOnWheel),t._boundOnWheel=null)},shadowTemplate:'\n<canvas></canvas>\n<style type="text/css">\n:host {\ndisplay: block;\noverflow: auto;\nwidth: 100%;\nheight: 100%;\nfont-family: inherit;\nmin-height:3em;\n}\ncanvas {\ndisplay: block;\nwidth: 100%;\nheight: 100%;\nbackground-color: var(--theme-color);\ncursor: text;\n}\n</style>\n'});