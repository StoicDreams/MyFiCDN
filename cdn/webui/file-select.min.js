"use strict";webui.define("webui-file-select",{preload:"button fa",constructor:t=>{t.contentType="bin",t.label="File Select",t.labelLimit=20,t._label=t.template.querySelector("label"),t._input=t.template.querySelector("input"),t._button=t.template.querySelector("webui-button"),t._span=t.template.querySelector("label > span"),t._input.addEventListener("change",(_=>{let files=t._input.files,list=[];if(files.length>0){t.classList.add("selected");for(let index=0;index<files.length;++index){let file=files[index],reader=new FileReader;if(reader.onload=function(ev){let item={name:file.name,type:file.type,size:file.size,lastModified:file.lastModified,lastModifiedDate:file.lastModifiedDate,content:ev.target.result};list.push(item),list.length===files.length&&t.setValue(list)},"text"===t.contentType)reader.readAsText(file);else reader.readAsDataURL(file)}}})),t._button.addEventListener("click",(_=>{t.classList.remove("selected"),t._input.value=null,t.setValue([])}))},setValue:function(value){const t=this;if(value&&void 0!==value.length&&parseInt(value.length)===value.length){t.value=value;let label=t.value.map((v=>v.name)).join(",")||t.label;t.labelLimit&&label.length>t.labelLimit&&(label=`${label.substr(0,t.labelLimit)}...`),t._label.innerHTML=label}else t.value=[],t._label.innerHTML=t.label;t.dispatchEvent(new Event("change",{bubbles:!0,composed:!0}))},attr:["label","data-trigger","accept","multiple","content-type","label-limit"],attrChanged:(t,property,value)=>{switch(property){case"label":t._label.innerHTML=value;break;case"labelLimit":t.labelLimit=parseInt(value)||0;break;case"accept":t._input.setAttribute("accept",value),["json","txt","md","html","toml",""].forEach((ft=>{-1!==value.indexOf(`.${ft}`)&&(t.contentType="text")}));break;case"multiple":!1===value?t._input.removeAttribute("multiple"):t._input.setAttribute("multiple",!0)}},connected:t=>{let id=webui.uuid();t._label.style.backgroundColor=`var(--color-${t.theme||"primary"})`,t._label.style.color=`var(--color-${t.theme||"primary"}-offset)`,t._label.setAttribute("for",id),t._input.setAttribute("id",id),t._label.parentNode.appendChild(t._input)},shadowTemplate:'\n<style type="text/css">\n:host {\n--theme-shadow-blur:var(--box-shadow-blur, 2px);\ndisplay:flex;\nposition:relative;\nbox-sizing:border-box;\n}\nlabel {\ndisplay:flex;\nalign-items:center;\njustify:center;\npadding:var(--padding,1rem);\ncursor:pointer;\nbackground-color:var(--theme-color);\ncolor:var(--theme-color-offset);\nbox-shadow:inset 1px 1px var(--theme-shadow-blur) rgba(255,255,255,0.5), inset -1px -1px var(--theme-shadow-blur) rgba(0,0,0,0.5), 1px 1px var(--theme-shadow-blur) rgba(0,0,0,0.5);\nwhite-space:nowrap;\n}\n:host(.selected) label {\nbox-shadow:inset -1px -1px var(--box-shadow-blur) rgba(255,255,255,0.5), inset 1px 1px var(--box-shadow-blur) rgba(0,0,0,0.5);\n}\ninput[type="file"] {\nz-index:1;\nopacity:0.01;\nposition:absolute;\nleft:0;\ntop:0;\nwidth:100%;\nheight:100%;\ncursor:pointer;\n}\n:host(.selected) input,\n:host(:not(.selected)) webui-button {display:none;}\n</style>\n<label><slot></slot><span></span></label>\n<input type="file" accept="*" />\n<webui-button theme="danger"><webui-icon icon="xmark"></webui-icon></webui-button>\n'});