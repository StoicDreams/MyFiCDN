"use strict";webui.define("webui-data-loader",{constructor:t=>{t.map={}},attr:["src","keymap","auth","apiroot"],attrChanged:(t,property,value)=>{switch(property){case"auth":t.usesAuth=!0;break;case"keymap":try{t.map=JSON.parse(value)}catch(_){}}t.isProcessed&&t.process()},connected:t=>{t.process()},processPath:async function(src,dataKey){let t=this;if(t.usesAuth&&!t.auth)return void console.error("webui-data-loader cannot load data: [auth] is not set with a data key.");let fo={headers:{}};if(src.startsWith("http")&&(fo.mode="cors"),!t.auth||(fo.headers.Authorization=webui.getData(t.auth),fo.headers.Authorization))try{let result=await fetch(src,fo);if(!result.ok)return void console.error("webui-data-loader failed: request returned invalid response",result);let payload=await result.text();webui.setData(webui.toSnake(dataKey),payload)}catch(ex){return void console.error("webui-data-loader failed loading data:",ex)}else console.error("webui-data-loader cannot load data: auth key did not find expected data.")},process:async function(){let t=this;if(t._sid=webui.uuid(),t._attempts=(t._attempts||0)+1,t.isProcessed=!0,t.src&&(t.dataset.trigger?(t.processPath(t.src,t.dataset.trigger),t.src=!1):console.error("webui-data-loader failed: src must be used in conjunction with a data-setter to signify which data key to assign data to.")),t.auth&&!webui.getData(t.auth))return t._attempts>4?void console.error(`webui-data-loader failed: Expected auth ${t.auth} returned invalid data.`):void setTimeout((()=>{t.process()}),Math.pow(10,t._attempts));let apiRoot="";if(t.apiroot&&(apiRoot=webui.getData(t.apiroot),!apiRoot))return t._attempts>4?void console.error(`webui-data-loader failed: Expected api root ${t.apiroot} returned invalid data.`):void setTimeout((()=>{t.process()}),Math.pow(10,t._attempts));Object.keys(t.dataset).forEach((key=>{let apiRoute=t.dataset[key],src=`${apiRoot}${apiRoute}`;t.processPath(src,key)}))}});