"use strict";{const e=document.createElement("template");e.setAttribute("shadowrootmode",!0),e.innerHTML='\n<style type="text/css">\n:host {\ndisplay: inline-flex;\nflex-flow: row;\ngap: 0.5em;\nalign-items: center;\ntext-decoration: underline;\npadding: 0;\nborder:none;\noutline:none;\nfont-size:inherit;\nfont:inherit;\n-webkit-user-select: text;\nuser-select: text;\ncolor: inherit;\n}\n:host([href]:not(:disabled)),\n:host([data-trigger]:not(:disabled)),\n:host([onclick]:not(:disabled)) {\ncursor:pointer;\n}\n</style>\n<slot name="start-icon"></slot>\n<slot></slot>\n<slot name="end-icon"></slot>\n    ';class t extends HTMLElement{constructor(){super();const t=this,n=t.attachShadow({mode:"open"});t.template=e.content.cloneNode(!0),n.appendChild(t.template),t._startIcon=t.template.querySelector('slot[name="start-icon"]'),t._endIcon=t.template.querySelector('slot[name="end-icon"]')}static get observedAttributes(){return["href","theme","start-icon","end-icon","start-icon-family","end-icon-family"]}attributeChangedCallback(e,t,n){if(t===n)return;null==n?delete this[e]:this[e]=n;let o=this;switch(e){case"theme":let t=[];o.classList.forEach(e=>{e.startsWith("color-")&&t.push(e)}),t.forEach(e=>o.classList.remove(e)),o.classList.add(`color-${n}`);break;case"start-icon-family":case"start-icon":{if(o.querySelectorAll('[slot="start-icon"]').forEach(e=>e.remove()),!o["start-icon"])break;let e=document.createElement("webui-fa");e.setAttribute("slot","start-icon"),e.setAttribute("icon",o["start-icon"]),o["start-icon-family"]&&e.setAttribute("family",o["start-icon-family"]),o.appendChild(e)}break;case"end-icon-family":case"end-icon":{if(o.querySelectorAll('[slot="end-icon"]').forEach(e=>e.remove()),!o["end-icon"])break;let e=document.createElement("webui-fa");e.setAttribute("slot","end-icon"),e.setAttribute("icon",o["end-icon"]),o["end-icon-family"]&&e.setAttribute("family",o["end-icon-family"]),o.appendChild(e)}}}connectedCallback(){}disconnectedCallback(){}}customElements.define("webui-link",t)}