"use strict";{const faCache={regular:{}},faWait={regular:{}};async function getIcon(family,name,handler){if(!name||!family)return"";faCache[family]||(faCache[family]={},faWait[family]={});let svg=faCache[family][name];if(svg)handler(svg);else if(faWait[family][name])faWait[family][name].push(handler);else{faWait[family][name]=[];try{svg=""}catch(ex){console.error("Failed loading fa icon file",family,name,ex),svg=""}faCache[family][name]=svg,handler(svg),setTimeout((()=>{faWait[family][name].forEach((h=>h(svg)))}),10)}}webui.define("webui-fa",{constructor:t=>{t.loadid=0,t.svg=webui.create("svg"),t.icon="triangle-exclamation",t.iconSlot=t.template.querySelector("slot[name=icon]"),t.countSlot=t.template.querySelector("slot[name=count]")},attr:["icon","family","class","count"],attrChanged:(t,property,value)=>{if("icon"===property||"family"===property){let loadid=t.loadid+1;return t.loadid=loadid,void setTimeout((()=>{t.loadid===loadid&&t.updateIcon()}),1)}if("count"===property){let num=parseInt(value)||0;t.countSlot.innerHTML=num>0?num.toLocaleString():value}},updateIcon:async function(){const t=this;let name=t.icon,family=t.family;family||(family=window.getComputedStyle(t).getPropertyValue("--fa-default-family")),family||(family="regular"),getIcon(family,name,(svg=>{t.svg=svg,t.iconSlot.innerHTML=`${t.svg}`}))},shadowTemplate:'\n<style type="text/css">\n:host {\ndisplay: inline-flex;\nposition: relative;\nalign-items: center;\njustify-items: center;\n}\nsvg {\nheight: 2ch;\nwidth: 3ch;\nfill: currentColor;\nline-height: 2ch;\nvertical-align: middle;\n}\nslot[name="count"] {\ndisplay:flex;\njustify-content:center;\nposition:absolute;\nborder-radius:1em;\nbackground-color:var(--theme-color-offset, var(--color-info-offset));\ncolor:var(--theme-color, var(--color-info));\nbottom:50%;\nright:-5%;\npadding:1px;\nfont-size:0.6em;\nmin-width:1rem;\ntext-align:center;\n}\nslot[name="count"]:empty {\ndisplay:none;\n}\n</style>\n<slot name="icon"></slot>\n<slot name="count"></slot>\n'})}