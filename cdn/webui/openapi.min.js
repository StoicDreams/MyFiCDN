/*!
 * Web UI OpenAPI - https://webui.stoicdreams.com/components#webui-openapi
 * Render OpenAPI documentation with testing capability.
 * Authored by Erik Gassler - Stoic Dreams
 * Copyright Â© 2025 Stoic Dreams - https://www.stoicdreams.com
 * Licensed under the MIT license - https://github.com/StoicDreams/MyFiCDN/blob/main/LICENSE
 */
"use strict";{function generatePlaceholderJson(schema){if(!schema)return{};switch(schema.type){case"object":const obj={};if(schema.properties)for(const key in schema.properties)obj[key]=generatePlaceholderJson(schema.properties[key]);return obj;case"array":return schema.items?[generatePlaceholderJson(schema.items)]:[];case"string":return"";case"number":case"integer":return 0;case"boolean":return!1;default:return null}}webui.define("webui-openapi",{preload:"dropdown alert flex button tabs input-message input-text grid",constructor:t=>{t.baseUrl=""},attr:["src"],attrChanged:(t,property,value)=>{if("src"===property)t.src=value,t.loadDoc()},connected:t=>{t.loadDoc()},loadDoc:async function(){const t=this;if(t.src&&t._loadedSrc!==t.src){t._loadedSrc=t.src;try{let doc=await webui.fetchWithCache(t.src,!0);"string"==typeof doc&&(doc=JSON.parse(doc)),t.doc=doc,t.baseUrl=doc.servers&&doc.servers[0]&&doc.servers[0].url||"",t.render()}catch(ex){t.innerHTML=`<webui-alert theme="danger" show>Failed to load OpenAPI: ${ex}</webui-alert>`}}},render:function(){const t=this;if(t.innerHTML="",!t.doc||!t.doc.paths)return;const serverOptions=[];for(let index=0;index<t.doc.servers.length;++index){const url=t.doc.servers[index].url;serverOptions.push({value:url,display:url})}{const wrap=webui.create("webui-flex");t.appendChild(wrap);const serverSel=webui.create("webui-dropdown",{label:"Servers"});wrap.appendChild(serverSel),serverSel.setOptions(serverOptions),serverSel.dataset.subscribe="openapi-server-url:value",serverSel.dataset.trigger="openapi-server-url:value",serverSel.addEventListener("change",(_=>{t.baseUrl=serverSel.value}))}const tabs=webui.create("webui-tabs",{vertical:!0,pad:"var(--padding)"});Object.keys(t.doc.paths).forEach((path=>{const pathItem=t.doc.paths[path];Object.keys(pathItem).forEach((method=>{const ep=pathItem[method],label=`${method.toUpperCase()} ${path}`,btn=webui.create("webui-button",{slot:"tabs",text:label,align:"left"});tabs.appendChild(btn);const content=webui.create("webui-content",{slot:"content"});tabs.appendChild(content),content.loadSrc=async function(){content.innerHTML="";const header=webui.create("h3",{text:label});content.appendChild(header);const wrap=webui.create("webui-flex",{column:!0});if(content.appendChild(wrap),ep.summary){const s=webui.create("webui-flex",{gap:"var(--padding)"});wrap.appendChild(s),s.appendChild(webui.create("strong",{text:"Summary:"})),s.appendChild(webui.create("p",{text:ep.summary})),"Missing Summary"!==ep.summary&&btn.setAttribute("title",ep.summary)}if(ep.description){const d=webui.create("webui-flex",{gap:"var(--padding)"});wrap.appendChild(d),d.appendChild(webui.create("strong",{text:"Description"})),d.appendChild(webui.create("p",{text:ep.description}))}content.appendChild(webui.create("h3",{text:"Parameters"}));const form=webui.create("form");content.appendChild(form);const params=webui.create("webui-flex",{column:!0,align:"center",justify:"end"});if(form.appendChild(params),ep.parameters&&ep.parameters.forEach&&ep.parameters.forEach((param=>{const input=webui.create("webui-input-text",{label:`<strong class="color-info">[${webui.escapeCode(param.in)}]</strong> ${webui.escapeCode(param.name)}`,required:param.required,theme:"primary"});switch(params.appendChild(input),`${param.in.toLowerCase()}-${param.name.toLowerCase()}`){case"header-cookie":input.setAttribute("disabled",!0),input.value="Cookies must be controlled by the API server.";break;case"header-origin":input.setAttribute("disabled",!0),input.value="Origin is included by the browser.";break;case"header-user-agent":input.setAttribute("disabled",!0),input.value="User Agent is included by the browser.";break;default:input.dataset.paramName=param.name,input.dataset.paramIn=param.in,param.description&&input.setAttribute("placeholder",param.description)}})),ep.requestBody&&ep.requestBody.content&&ep.requestBody.content["application/json"]){const schema=ep.requestBody.content["application/json"].schema;switch(schema.type){case"object":if(schema.properties)for(const key in schema.properties){let info=schema.properties[key];switch(info.type){case"object":{let field=webui.create("webui-input-message",{name:key,label:key,placeholder:"{}",theme:"primary",title:info.type});if(info.items){const placeholderJson=generatePlaceholderJson(info.items);field.value=JSON.stringify(placeholderJson,null,2)}else field.value="{}";params.appendChild(field)}break;case"array":{let field=webui.create("webui-input-message",{name:key,label:key,placeholder:"[]",theme:"primary",title:info.type});if(info.items){const placeholderJson=generatePlaceholderJson(info.items);field.value=JSON.stringify(placeholderJson,null,2)}else field.value="[]";params.appendChild(field)}break;case"string":{let field=webui.create("webui-input-message",{name:key,label:key,placeholder:"",theme:"primary",title:info.type});params.appendChild(field)}break;case"number":case"integer":case"boolean":{let field=webui.create("webui-input-text",{name:key,label:key,placeholder:"",theme:"primary",title:info.type});params.appendChild(field)}break;default:console.warn("Unexpected schema type %s for %s",info.type,key)}}else{let field=webui.create("webui-input-message",{name:"body",label:"body - object",placeholder:"{}",theme:"primary"});params.appendChild(field)}break;case"array":{let field=webui.create("webui-input-message",{name:"body",label:"body - array",placeholder:"[]",theme:"primary"});if(params.appendChild(field),schema.items){const placeholderJson=generatePlaceholderJson(schema.items);field.value=JSON.stringify(placeholderJson,null,2)}else field.value="[]"}break;case"string":{let field=webui.create("webui-input-message",{name:"body",label:"body - string",placeholder:"",theme:"primary"});params.appendChild(field)}break;case"number":case"integer":{let field=webui.create("webui-input-message",{name:"body",label:`body - ${schema.type}`,placeholder:"0",theme:"primary"});params.appendChild(field)}break;case"boolean":{let field=webui.create("webui-input-message",{name:"body",label:"body - boolean",placeholder:"true|false",theme:"primary"});params.appendChild(field)}break;default:console.warn("Unexpected schema type",schema.type)}}const sendBtn=webui.create("webui-button",{text:"Send",theme:"primary"});params.appendChild(sendBtn),content.appendChild(webui.create("h4",{text:"Response"}));const result=webui.create("webui-flex",{column:!0,class:"content"});content.appendChild(result),sendBtn.addEventListener("click",(async ev=>{ev.preventDefault();let url=path;const query=[],headers={"Content-Type":"application/json"};webui.querySelectorAll("[data-param-name]",form).forEach((inp=>{const val=inp.value,name=inp.dataset.paramName;switch(inp.dataset.paramIn){case"path":url=url.replace(`{${name}}`,val);break;case"query":val&&query.push(`${encodeURIComponent(name)}=${encodeURIComponent(val)}`);break;case"header":headers[name]=val;break;default:console.warn("unhandled param in",inp.dataset.paramIn)}})),url=`${t.baseUrl}${url}${query.length?"?"+query.join("&"):""}`;const options={method:method.toUpperCase(),credentials:"include",mode:"cors",cache:"no-cache",headers:headers};let formData=new FormData(form);const jsonData=Object.fromEntries(formData);jsonData.body?options.body=jsonData.body:Object.keys(jsonData).length>0&&(options.body=JSON.stringify(jsonData,null,2)),result.innerHTML="";try{const resp=await fetch(url,options);let text=await resp.text(),lang="Text";try{text=JSON.stringify(JSON.parse(text),null,2),lang="Json"}catch(_){}let label=`[${resp.status}]`;const respDisplay=webui.create("webui-grid",{columns:"max-content 1fr"});result.appendChild(respDisplay),["url","status","statusText","ok"].forEach((key=>{respDisplay.appendChild(webui.create("strong",{text:key}));let value=resp[key];try{"object"==typeof value&&(value=JSON.stringify(value,null,2))}catch{}respDisplay.appendChild(webui.create("code",{text:value,class:"px-1"}))})),result.appendChild(webui.create("h5",{text:"Response Headers"}));const headersDisplay=webui.create("webui-grid",{columns:"max-content 1fr",gap:"8px"});for(const[key,value]of resp.headers.entries())headersDisplay.appendChild(webui.create("strong",{text:key,class:"px-1"})),headersDisplay.appendChild(webui.create("code",{text:value,class:"px-1"}));result.appendChild(headersDisplay),result.appendChild(webui.create("h6",{text:"Response Body"}));const code=webui.create("webui-code",{lang:lang,label:label});result.appendChild(code),code.setValue(text)}catch(ex){result.appendChild(webui.create("webui-alert",{variant:"danger",text:ex.toString(),show:!0}))}}))}}))})),t.appendChild(tabs)}})}