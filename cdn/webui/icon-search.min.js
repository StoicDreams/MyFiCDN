"use strict";{const srcRoot="MyFi CDN"===webui.getData("appName")?"/icons/":"https://cdn.myfi.ws/icons/";webui.define("webui-icon-search",{pipedValue:"",preload:"icon dropdown input-range input-text input-message",constructor:t=>{},attr:[],attrChanged:(t,property,value)=>{},connected:t=>{t.setupComponent()},setupComponent:function(){let t=this;t.style.display="flex",t.style.flexDirection="column",t.style.flexGap="var(--padding)";let colorOptions=JSON.stringify([{value:"",display:"None"},{value:"black",display:"Black"},{value:"white",display:"White"},{value:"title",display:"Title"},{value:"primary",display:"Primary"},{value:"secondary",display:"Secondary"},{value:"tertiary",display:"Tertiary"},{value:"info",display:"info"},{value:"success",display:"success"},{value:"warning",display:"warning"},{value:"danger",display:"danger"},{value:"active",display:"Active"},{value:"button",display:"Button"},{value:"action",display:"Action"}]),shapeOptions=JSON.stringify([{value:"",display:"Square"},{value:"badge",display:"Badge"},{value:"circle",display:"Circle"},{value:"triangle",display:"Triangle"},{value:"octo",display:"Octogon"}]);t._modPath=1,t._inputs=webui.create("webui-grid",{columns:"1fr 1fr",theme:"background"}),t.appendChild(t._inputs),t._svgContainer=webui.create("div",{style:"display:block;position:relative;aspect-ratio:1;padding:0;margin:auto;width:50%;max-width:300px;"}),t._inputs.appendChild(t._svgContainer),t._iconPreview=webui.create("webui-icon",{style:"position:absolute;width:100%;top:0;left:0;"}),t._svgContainer.appendChild(t._iconPreview);let icons=[];icons.push(t._iconPreview),t._icons=icons;let inputsColumn=webui.create("webui.flex",{column:""});function setupDropdown(label,attr,options){let dd=webui.create("webui-dropdown",{label:label,options:options});inputsColumn.appendChild(dd),dd.addEventListener("change",(_=>{let value=dd.value;icons.forEach((icon=>{value?icon.setAttribute(attr,value):icon.removeAttribute(attr)})),t.buildIconCode()}))}function setupToggleIcon(name,label,flagAttr){t[name]=webui.create("webui-toggle-icon",{label:label,"title-on":`Disable ${label}`,"title-off":`Enable ${label}`,"theme-on":"success","theme-off":"shade","flags-on":"fill","flags-off":""}),t[name].addEventListener("change",(_=>{icons.forEach((icon=>{t[name].value?icon.setAttribute(flagAttr,""):icon.removeAttribute(flagAttr)})),t.buildIconCode()})),t._iconFlags.appendChild(t[name])}t._inputs.appendChild(inputsColumn),inputsColumn.appendChild(webui.create("h6",{html:"<strong>Icon Search</strong>"})),t._inputSearch=webui.create("webui-input-text",{label:"Search / Filter Icons",value:"",placeholder:"menu"}),t._iconFlags=webui.create("webui-flex",{name:"icon-options",justify:"flex-start",align:"center",wrap:!0,gap:5,html:'<h6 class="f1">Flags:</h6>'}),inputsColumn.appendChild(t._iconFlags),setupDropdown("Icon Theme","theme",colorOptions),setupDropdown("Shape","shape",shapeOptions),setupDropdown("Stroke","stroke",JSON.stringify([{value:"",display:"Regular"},{value:"thin",display:"Thin"},{value:"thick",display:"Thick"}])),setupDropdown("Shade","shade",JSON.stringify([{value:"",display:"Regular"},{value:"duo",display:"Duo"},{value:"tri",display:"Trio"}]));let rotate=webui.create("webui-input-range",{label:"Rotation",min:0,max:355,step:5});inputsColumn.appendChild(rotate),rotate.addEventListener("input",(_=>{let value=rotate.value;icons.forEach((icon=>{value>0?icon.setAttribute("rotate",value):icon.removeAttribute("rotate"),t.buildIconCode()}))})),setupToggleIcon("_backingToggle","Backing","backing"),setupToggleIcon("_sharpToggle","Sharp","sharp"),setupToggleIcon("_fillToggle","Fill","fill"),setupToggleIcon("_borderToggle","Bordered","bordered"),setupToggleIcon("_banToggle","Ban","ban"),setupToggleIcon("_invertToggle","Inverted","inverted"),t.appendChild(t._inputSearch),t._codeSample=webui.create("webui-code",{lang:"html",label:"Icon Code"}),inputsColumn.appendChild(t._codeSample),inputsColumn.appendChild(webui.create("p",{html:"Icon components also accept pipe delimited configurations, useful when passing icon data to parent components that pass icon values to child webui-icon components."})),t._codeSamplePiped=webui.create("webui-code",{lang:"html",label:"Icon Code Piped"}),inputsColumn.appendChild(t._codeSamplePiped),t._bottomGrid=webui.create("webui-grid",{gap:"1",theme:"white",width:"100",height:"100"}),t.appendChild(t._bottomGrid),t.loadIcons(),t._inputSearch.addEventListener("input",(_=>{t.updateDisplayedIcons()}))},buildIconCode:function(){let t=this,ico=t._icons[0].cloneNode();ico.removeAttribute("style");let code=ico.outerHTML;t._codeSample.value=code;let pipeData=[];pipeData.push(ico.getAttribute("icon")),ico.getAttributeNames().forEach((attr=>{if("icon"===attr);else{let value=ico.getAttribute(attr);value?pipeData.push(`${attr}:${value}`):pipeData.push(`${attr}`)}})),t.pipedValue=pipeData.join("|"),t._codeSamplePiped.value=`<webui-icon icon="${t.pipedValue}"></webui-icon>`},setIcon:function(icon){let t=this;t._current=icon,t._icons[0].setAttribute("icon",icon),t.buildIconCode()},updateDisplayedIcons:function(){let t=this,isFirst=!0,filter=t._inputSearch.value;filter="string"==typeof filter?filter.toLowerCase():"";let current=t._current,valid=[];function setIsFirst(icon){valid.push(icon),isFirst&&(isFirst=!1,setTimeout((()=>{-1===valid.indexOf(current)&&t.setIcon(icon)}),100))}t._iconContainers.forEach((c=>{let icon=c.icon.name;if(!filter)return t._bottomGrid.appendChild(c),void setIsFirst(icon);let tags=c.icon.tags.split(" ");if(-1!==icon.toLowerCase().indexOf(filter))return t._bottomGrid.appendChild(c),void setIsFirst(icon);let isMatched=!1;tags.forEach((tag=>{isMatched||-1!==tag.toLowerCase().indexOf(filter)&&(isMatched=!0,t._bottomGrid.appendChild(c),setIsFirst(icon))})),isMatched||c.parentNode&&c.parentNode.removeChild&&c.parentNode.removeChild(c)})),t.buildIconCode()},loadIcons:async function(){let t=this;t._iconContainers=[];try{let result=await fetch(`${srcRoot}all.json`);if(!result.ok)return;let icons=await result.json();icons.forEach((data=>{let icon=data.name,container=webui.create("a",{style:"flex-direction:column;"});container.icon=data,t._iconContainers.push(container),t._bottomGrid.appendChild(container);let el=webui.create("webui-icon",{icon:`${icon}`,width:"32"});container.appendChild(el),t._icons.push(el);let label=webui.create("label",{text:icon});container.appendChild(label),container.addEventListener("click",(_=>{t.setIcon(icon)}))})),t.updateDisplayedIcons()}catch(ex){console.error("Failed loading icons list",ex)}},shadowTemplate:'\n<slot></slot>\n<style type="text/css">\n:host {\n\n}\n</style>'})}